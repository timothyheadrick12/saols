// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  name        String
  lvl         Int          @default(1)
  str         Int          @default(1)
  agi         Int          @default(1)
  cor         Int          @default(100)
  weapon      Weapon       @relation(fields: [weaponId], references: [id])
  weaponId    Int
  items       Item[]
  swordSkills SwordSkill[]
  betaTester  Boolean      @default(true)
  beater      Boolean      @default(false)
  moderator   Boolean      @default(false)
  admin       Boolean      @default(false)
}

model Weapon {
  id           Int            @id @default(autoincrement())
  users        User[]
  name         String
  lvl          Int            @default(1)
  atk          Int            @default(1)
  weight       Int            @default(25)
  MarketWeapon MarketWeapon[]
}

model Item {
  id          Int          @id @default(autoincrement())
  users       User[]
  name        String
  description String
  MarketItem  MarketItem[]
}

model SwordSkill {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  power       Int
  users       User[]
}

model Boss {
  id     Int    @id @default(autoincrement())
  name   String
  health Int
  event  Event?
}

model Event {
  id                Int       @id @default(autoincrement())
  tweetText         String
  startDateTime     DateTime
  endDateTime       DateTime
  started           Boolean   @default(false)
  finished          Boolean   @default(false)
  random            Boolean   @default(false)
  endsAtDailyReset  Boolean   @default(false)
  boss              Boss?     @relation(fields: [bossId], references: [id])
  bossId            Int?      @unique
  market            Market?    @relation(fields: [marketId], references: [id])
  encounter         Encounter? @relation(fields: [encounterId], references: [id])
  customHashtag     String?
  tweetId           String?
  tweetStreamRuleId String?
  type              TweetType
  marketId          Int?
  encounterId       Int?
}

model Market {
  id      Int            @id @default(autoincrement())
  items   MarketItem[]
  weapons MarketWeapon[]
  Event   Event[]
}

model MarketItem {
  id       Int     @id @default(autoincrement())
  item     Item    @relation(fields: [itemId], references: [id])
  cost     Int
  market   Market? @relation(fields: [marketId], references: [id])
  marketId Int?
  itemId   Int
}

model MarketWeapon {
  id       Int     @id @default(autoincrement())
  weapon   Weapon  @relation(fields: [weaponId], references: [id])
  cost     Int
  market   Market? @relation(fields: [marketId], references: [id])
  marketId Int?
  weaponId Int
}

model Encounter {
  id      Int     @id @default(autoincrement())
  enemies Enemy[]
  Event   Event[]
}

model Enemy {
  id          Int        @id @default(autoincrement())
  encounter   Encounter? @relation(fields: [encounterId], references: [id])
  encounterId Int?
}

model BattlePrompt {
  id   Int    @id @default(autoincrement())
  text String
}

model MarketPrompt {
  id   Int    @id @default(autoincrement())
  text String
}

enum TweetType {
  ENCOUNTER
  MARKET
  BOSS
  MESSAGE
}
