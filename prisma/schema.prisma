// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id                           Int          @id @default(autoincrement())
  username                     String       @unique
  name                         String
  lvl                          Int          @default(1)
  str                          Int          @default(1)
  agi                          Int          @default(1)
  cor                          Int          @default(100)
  totalDamageDone              Int          @default(0)
  damagePerTurn                Int          @default(0)
  weapon                       Weapon       @relation(fields: [weaponId], references: [id])
  weaponId                     Int
  items                        Item[]
  swordSkills                  SwordSkill[]
  betaTester                   Boolean      @default(true)
  beater                       Boolean      @default(false)
  merchant                     Boolean      @default(false)
  hero                         Boolean      @default(false)
  bard                         Boolean      @default(false)
  clearer                      Boolean      @default(false)
  avenger                      Boolean      @default(false)
  moderator                    Boolean      @default(false)
  admin                        Boolean      @default(false)
  oneHandedSwordSkillLvl       Int          @default(1)
  oneHandedCurvedSwordSkillLvl Int          @default(0)
  oneHandedAxeSkillLvl         Int          @default(0)
  twoHandedBattleAxeSkillLvl   Int          @default(0)
  twoHandedSwordSkillLvl       Int          @default(0)
  rapierSkillLvl               Int          @default(0)
  daggerSkillLvl               Int          @default(1)
  clawsSkillLvl                Int          @default(0)
  katanaSkillLvl               Int          @default(0)
  maceSkillLvl                 Int          @default(0)
  spearSkillLvl                Int          @default(0)
}

model Weapon {
  id           Int            @id @default(autoincrement())
  users        User[]
  name         String
  lvl          Int
  atk          Int            @default(1)
  weight       Int            @default(25)
  MarketWeapon MarketWeapon[]
  BaseWeapon   BaseWeapon     @relation(fields: [baseWeaponId], references: [id])
  baseWeaponId Int
  Enemy        Enemy[]
}

model BaseWeapon {
  id              Int        @id @default(autoincrement())
  type            WeaponType
  weapons         Weapon[]
  name            String
  minLvl          Int        @default(1)
  baseWeight      Int
  baseAtk         Int
  basicAtkSpdCost Int
  damagePerLvl    Float
  basePrice       Int
}

model Item {
  id          Int          @id @default(autoincrement())
  users       User[]
  name        String
  description String
  MarketItem  MarketItem[]
}

model SwordSkill {
  id                  Int        @id @default(autoincrement())
  name                String
  description         String
  lvl                 Int
  atm                 Float
  numHits             Int
  weaponType          WeaponType
  handlingRequirement Float
  spdCost             Int
  power               Int
  users               User[]
}

model Boss {
  id     Int    @id @default(autoincrement())
  name   String
  health Int
  event  Event?
}

model Event {
  id                Int        @id @default(autoincrement())
  tweetText         String
  startDateTime     DateTime
  endDateTime       DateTime
  started           Boolean    @default(false)
  finished          Boolean    @default(false)
  random            Boolean    @default(false)
  endsAtDailyReset  Boolean    @default(false)
  boss              Boss?      @relation(fields: [bossId], references: [id])
  bossId            Int?       @unique
  market            Market?    @relation(fields: [marketId], references: [id])
  encounter         Encounter? @relation(fields: [encounterId], references: [id])
  customHashtag     String?
  tweetId           String?
  tweetStreamRuleId String?
  type              TweetType
  marketId          Int?
  encounterId       Int?
}

model Market {
  id      Int            @id @default(autoincrement())
  items   MarketItem[]
  weapons MarketWeapon[]
  Event   Event[]
}

model MarketItem {
  id       Int     @id @default(autoincrement())
  item     Item    @relation(fields: [itemId], references: [id])
  cost     Int
  market   Market? @relation(fields: [marketId], references: [id])
  marketId Int?
  itemId   Int
}

model MarketWeapon {
  id       Int     @id @default(autoincrement())
  weapon   Weapon  @relation(fields: [weaponId], references: [id])
  cost     Int
  market   Market? @relation(fields: [marketId], references: [id])
  marketId Int?
  weaponId Int
}

model Encounter {
  id      Int     @id @default(autoincrement())
  enemies Enemy[]
  Event   Event[]
}

model Enemy {
  id          Int         @id @default(autoincrement())
  encounter   Encounter?  @relation(fields: [encounterId], references: [id])
  encounterId Int?
  hp          Int
  weapon      Weapon?     @relation(fields: [weaponId], references: [id])
  title       enemyTitles
  hpc         Float

  weaponId Int?
}

model BattlePrompt {
  id   Int    @id @default(autoincrement())
  text String
}

model MarketPrompt {
  id   Int    @id @default(autoincrement())
  text String
}

enum TweetType {
  ENCOUNTER
  MARKET
  BOSS
  MESSAGE
}

enum WeaponType {
  ONE_HANDED_SWORD
  ONE_HANDED_CURVED_SWORD
  ONE_HANDED_AXE
  TWO_HANDED_BATTLE_AXE
  TWO_HANDED_SWORD
  RAPIER
  DAGGER
  CLAWS
  KATANA
  MACE
  SPEAR
}

enum enemyTitles {
  WEAK
  NORMAL
  STRONG
  MENACING
  NIGHTMARE
}
